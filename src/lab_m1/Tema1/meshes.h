#pragma once

#include "utils/glm_utils.h"
#include "core/gpu/vertex_format.h"
#include <vector>

using namespace std;

namespace meshes
{
    inline std::pair<vector<VertexFormat>, vector<unsigned int>> Bird()
    {
        vector<VertexFormat> vertices = {
            { {-124,-174,-1} , {1,0.725,0.7} },
            { {-100,-22,-1} , {0.405,0.59,1} },
            { {-73,-12,-1} , {0.85,0.81,0.865} },
            { {-45,-4,-1} , {1,0.745,0.7} },
            { {48,26,-1} , {0.405,0.835,1} },
            { {79,37,-1} , {0.405,0.885,1} },
            { {75,-13,-1} , {1,1,0.375} },
            { {111,-14,-1} , {0.495,0.655,0.915} },
            { {137,-28,-1} , {0.495,0.875,0.915} },
            { {65,-30,-1} , {1,1,0.375} },
            { {-70,96,-1} , {0.405,0.95,1} },
            { {6,170,-1} , {0.985,0.63,0.15} },
            { {106,116,-1} , {1,0.575,0.7} },
            { {16,82,-1} , {0.945,0.68,0.15} },
            { {77,236,-1} , {1,0.26,0.035} },
            { {130,173,-1} , {1,0.7,0.15} },
            { {129,224,-1} , {0.945,0.65,0.15} },
            { {241,187,-1} , {0.945,1,0.15} },

            // eye
            { {100,205,1} , {0,0,0} },
            { {120,205,1} , {0,0,0} },
            { {120,185,1} , {0,0,0} },
            { {100,185,1} , {0,0,0} },
        };

        vector<unsigned int> indices =
        {
            0,1,2,
            0,2,3,
            9,6,7,
            6,7,8,
            9,6,7,
            9,7,8,
            6,4,5,
            6,5,7,
            15,16,17,
            12,11,14,
            12,14,16,
            12,16,15,
            1,10,11,
            1,11,13,
            1,13,3,
            3,4,5,
            3,5,12,
            12,5,4,
            12,4,3,
            12,3,13,
            12,13,11,

            // eye
            18, 19, 20,
            21, 19, 20,
        };

        return std::make_pair(vertices, indices);
    }

    inline std::pair<vector<VertexFormat>, vector<unsigned int>> KingBird()
    {
        vector<VertexFormat> vertices = {
            { {-124,-174,-1} , {0,0,0.2} },
            { {-100,-22,-1} , {0,0,0.225} },
            { {-73,-12,-1} , {0.22,0,0.41} },
            { {-45,-4,-1} , {0,0,0.31} },
            { {48,26,-1} , {0,0.3,0.22} },
            { {79,37,-1} , {0.19,0,0.5} },
            { {75,-13,-1} , {0,0,0.11} },
            { {111,-14,-1} , {0,0,0.41} },
            { {137,-28,-1} , {0.14,0,0.6} },
            { {65,-30,-1} , {0,0.14,0.33} },
            { {-70,96,-1} , {0,0,0.22} },
            { {6,170,-1} , {0.3,0,0.17} },
            { {106,116,-1} , {0.1,0.1,0.2} },
            { {16,82,-1} , {0,0,0.4} },
            { {77,236,-1} , {0.1,0,0.44} },
            { {130,173,-1} , {0,0.14,0.1} },
            { {129,224,-1} , {0.1,0.3,0.7} },
            { {241,187,-1} , {0,0,0.3} },

            // eye
            { {100,205,1} , {0.7,0.7,1} },
            { {120,205,1} , {.9,.8,.6} },
            { {120,185,1} , {.9,.8,.5} },
            { {100,185,1} , {.9,.9,1} },
        };

        vector<unsigned int> indices =
        {
            0,1,2,
            0,2,3,
            9,6,7,
            6,7,8,
            9,6,7,
            9,7,8,
            6,4,5,
            6,5,7,
            15,16,17,
            12,11,14,
            12,14,16,
            12,16,15,
            1,10,11,
            1,11,13,
            1,13,3,
            3,4,5,
            3,5,12,
            12,5,4,
            12,4,3,
            12,3,13,
            12,13,11,

            // eye
            18, 19, 20,
            21, 19, 20,
        };

        return std::make_pair(vertices, indices);
    }


    inline std::pair<vector<VertexFormat>, vector<unsigned int>> Wing1()
    {
        vector<VertexFormat> vertices = {
            { {-100,-22,0} , {0.17,0.13,1} },
            { {6,170,0} , {0.805,0.645,1} },
            { {-250,180,0} , {0.125,1,1} },
        };

        vector<unsigned int> indices =
        {
            0, 2, 1,
        };

        return std::make_pair(vertices, indices);
    }


    inline std::pair<vector<VertexFormat>, vector<unsigned int>> Wing2()
    {
        vector<VertexFormat> vertices = {
            { {-100,-22,-2} , {0.17,0.13,1} },
            { {6,170,-2} , {0.805,0.645,1} },
            { {-80, 370, -2}, { 0.125,1,1 } },
        };

        vector<unsigned int> indices =
        {
            0, 2, 1,
        };

        return std::make_pair(vertices, indices);
    }


    inline std::pair<vector<VertexFormat>, vector<unsigned int>> CollisionBox()
    {
        vector<VertexFormat> vertices = {
            { {0, 0, 1} , {1,1,1} },
            { {300, 0, 1} , {1,1,1} },
            { {300, -300, 1}, { 1,1,1 } },
            { {0, -300, 1}, { 1,1,1 } },
        };

        vector<unsigned int> indices =
        {
            0, 1,
            1, 2,
            2, 3,
            3, 0,
        };

        return std::make_pair(vertices, indices);
    }


    inline std::pair<vector<VertexFormat>, vector<unsigned int>> Crosshair()
    {
        vector<VertexFormat> vertices = {
            // up
            { {-1, 2, 1} , {1,0,0} }, // a 0
            { {1, 2, 1} , {1,0,0} }, // b
            { {-1, 10, 1}, {0.2,0, 0} }, //g
            { {1, 10, 1}, {0.2,0,0} }, //h

            // left
            { {-2, 1, 1} , {1,0,0} }, //m 4
            { {-2, -1, 1} , {1,0,0} }, //n
            { {-10, -1, 1} , {0.2,0,0} }, //o
            { {-10, 1, 1} , {0.2,0,0} }, //p

            // down
            { {-1, -2, 1} , {1,0,0} }, //q 8
            { {1, -2, 1} , {1,0,0} }, //r
            { {-1, -10, 1} , {0.2,0,0} }, //s
            { {1, -10, 1} , {0.2,0,0} }, //t

            // right
            { {2, 1, 1} , {1,0,0} }, //i 12
            { {2, -1, 1} , {1,0,0} }, //j
            { {10, -1, 1} , {0.2,0,0} }, //k
            { {10, 1, 1} , {0.2,0,0} }, //l
        };

        vector<unsigned int> indices =
        {
            // up
            3, 1, 0,
            2, 1, 0,

            //left
            7, 4, 5,
            4, 5, 6,

            // down
            8, 9, 11,
            10, 8, 9,

            // right
            13, 12, 15,
            12, 14, 13,
        };

        return std::make_pair(vertices, indices);
    }


    inline std::pair<vector<VertexFormat>, vector<unsigned int>> Heart()
    {
        vector<VertexFormat> vertices = {
            { {1,97,0} , {0.8,-0.03,-0.02} },
            { {99,182,0} , {1,-0.03,-0.02} },
            { {181,104,0} , {1,-0.03,-0.02} },
            { {-105,184,0} , {0.55,-0.03,-0.02} },
            { {-178,100,0} , {0.305,-0.03,-0.02} },
            { {-173,4,0} , {0.315,-0.03,-0.02} },
            { {171,3,0} , {1,-0.03,-0.02} },
            { {-1,-197,0} , {0.785,-0.03,-0.02} },
            { {95,-93,0} , {1,-0.03,-0.02} },
            { {-103,-97,0} , {0.265,-0.03,-0.02} },
        };

        vector<unsigned int> indices = {
            7,9,5,
            7,5,4,
            7,4,3,
            7,3,0,
            0,1,2,
            0,2,6,
            0,6,8,
            0,8,7,
        };

        return std::make_pair(vertices, indices);
    }


    inline std::pair<vector<VertexFormat>, vector<unsigned int>> BlackHeart()
    {
        vector<VertexFormat> vertices = {
            { {1,97,0} , {0.05,0,0.1} },
            { {99,182,0} , {0.09,0,0.1} },
            { {181,104,0} , {0.12,-0.03,0.14} },
            { {-105,184,0} , {0.55,-0.03,0.2} },
            { {-178,100,0} , {0.305,-0.03,-0.02} },
            { {-173,4,0} , {0.315,-0.03,-0.02} },
            { {171,3,0} , {0.2,-0.03,0.7} },
            { {-1,-197,0} , {0.25,-0.03, 0.7} },
            { {95,-93,0} , {0.14,-0.03,0.8} },
            { {-103,-97,0} , {0.15,-0.03,0.68} },
        };

        vector<unsigned int> indices = {
            7,9,5,
            7,5,4,
            7,4,3,
            7,3,0,
            0,1,2,
            0,2,6,
            0,6,8,
            0,8,7,
        };

        return std::make_pair(vertices, indices);
    }


    inline std::pair<vector<VertexFormat>, vector<unsigned int>> Bullet()
    {
        vector<VertexFormat> vertices = {
            { {-49,-182,3} , {0.705,0.425,0.005} },
            { {54,-183,3} , {1,1,-0.265} },
            { {-36,-163,3} , {1,0.615,0.005} },
            { {36,-164,3} , {1,1,-0.265} },
            { {-49,-150,3} , {0.775,0.425,0.005} },
            { {55,-148,3} , {0.915,0.565,-0.28} },
            { {-49,-135,3} , {0.88,0.485,0.005} },
            { {56,-132,3} , {1,0.74,0.005} },
            { {-52,24,3} , {0.88,0.495,0.005} },
            { {58,22,3} , {1,1,-0.28} },
            { {-35,41,3} , {1,0.305,0.005} },
            { {35,41,3} , {1,0.465,-0.28} },
            { {-27,100,3} , {0.45,0,0.005} },
            { {28,99,3} , {1,0.16,-0.28} },
            { {1,173,3} , {1,0.155,-0.28} },
            { {460,292,3} , {0.5,0.5,0.5} },
        };

        vector<unsigned int> indices = {
            0,2,3,
            3,1,0,
            2,4,3,
            2,3,5,
            4,6,7,
            7,5,3,
            7,3,2,
            7,2,4,
            6,8,9,
            6,9,7,
            8,10,11,
            8,11,9,
            10,12,14,
            10,14,13,
            10,13,11,
        };

        return std::make_pair(vertices, indices);
    }


    inline std::pair<vector<VertexFormat>, vector<unsigned int>> ScoreBar()
    {
        vector<VertexFormat> vertices = {
            { {0, 0, 3} , {1, 1, 1} }, // C
            { {150, 0, 3} , {1, 1, 1} }, // D
            { {150, -40, 3} , {1, 1, 1} }, // F
            { {0, -40, 3} , {1, 1, 1} }, // E
            { {3,  -38, 3} , {1, 1, 1} }, // B
            { {147, -38, 3} , {1, 1, 1} }, // B'
            { {3, -2, 3} , {1, 1, 1} }, // A
            { {147, -2, 3} , {1, 1, 1} }, // A'
        };

        vector<unsigned int> indices = {
            3, 0, 4,
            6, 4, 0,
            6, 0, 7,
            7, 0, 1,

            7, 1, 5,
            2, 5, 1,
            3, 4, 5,
            3, 5, 2,
        };

        return std::make_pair(vertices, indices);
    }


    inline std::pair<vector<VertexFormat>, vector<unsigned int>> ScoreBarSegment()
    {
        vector<VertexFormat> vertices = {
            { {0, 0, 1} , {.5f, 0, 0} }, // A
            { {0, 36, 1} , {.5f, 0, 0} }, // B
            { {24, 36, 1} , {1, 0, 0} }, // X
            { {24, 0, 1} , {1, 0, 0} }, // Y
        };

        vector<unsigned int> indices = {
            0, 1, 2,
            3, 0, 2,
        };

        return std::make_pair(vertices, indices);
    }


    inline std::pair<vector<VertexFormat>, vector<unsigned int>> SlowMotionSegment()
    {
        vector<VertexFormat> vertices = {
            { {0, 0, 3} , {.1f, 0, .3f} }, // A
            { {0, 36, 3} , {.1f, 0, .3f} }, // B
            { {24, 36, 3} , {.15f, 0, 0.83f} }, // X
            { {24, 0, 3} , {.15f, 0, 0.83f} }, // Y
        };

        vector<unsigned int> indices = {
            0, 1, 2,
            3, 0, 2,
        };

        return std::make_pair(vertices, indices);
    }


    inline std::pair<vector<VertexFormat>, vector<unsigned int>> GrassBlade()
    {
        /*vector<VertexFormat> vertices = {
            { {-22,-175,2} , {-0.11,0.085,-0.695} },
            { {-11,-182,2} , {-0.11,0.015,-0.695} },
            { {-47,121,2} , {-0.11,0.805,0.185} },
            { {-43,159,2} , {-0.11,0.98,0.185} },
            { {-21,-22,2} , {-0.11,0.585,0.185} },
            { {-17,-25,2} , {-0.11,0.585,-0.695} },
        };*/

        vector<VertexFormat> vertices = {
            { {-22,-175,2} , {-0.11,0.085,-0.695} },
            { {-11,-182,2} , {-0.11,0.015,-0.695} },
            { {-47,121,2} , {-0.11,0.685,0.185} },
            { {-43,159,2} , {-0.29,0.7,0.385} },
            { {-21,-22,2} , {-0.29,0.485,0.385} },
            { {-17,-25,2} , {-0.29,0.485,-0.295} },
        };

        vector<unsigned int> indices = {
            0,1,5,
            0,5,4,
            0,4,2,
            0,2,3,
            5,2,3,
            5,3,4,
            4,2,3,
        };

        return std::make_pair(vertices, indices);
    }
}   // namespace meshes
